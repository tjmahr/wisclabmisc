% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/model-rate.R
\name{fit_gen_gamma_gamlss}
\alias{fit_gen_gamma_gamlss}
\alias{fit_gen_gamma_gamlss_se}
\alias{predict_gen_gamma_gamlss}
\title{Fit a generalized gamma regression model (for speaking rate)}
\source{
Associated article: \url{https://doi.org/10.1044/2021_JSLHR-21-00206}
}
\usage{
fit_gen_gamma_gamlss(
  data,
  var_x,
  var_y,
  df_mu = 3,
  df_sigma = 2,
  df_nu = 1,
  control = NULL
)

fit_gen_gamma_gamlss_se(
  data,
  name_x,
  name_y,
  df_mu = 3,
  df_sigma = 2,
  df_nu = 1,
  control = NULL
)

predict_gen_gamma_gamlss(newdata, model, centiles = c(5, 10, 50, 90, 95))
}
\arguments{
\item{data}{a data frame}

\item{var_x, var_y}{(unquoted) variable names giving the predictor variable
(e.g., \code{age}) and outcome variable (.e.g, \code{rate}).}

\item{df_mu, df_sigma, df_nu}{degrees of freedom}

\item{control}{a \code{\link[gamlss:gamlss.control]{gamlss::gamlss.control()}} controller. Defaults to \code{NULL}
which uses default settings, except for setting trace to \code{FALSE} to silence
the output from gamlss.}

\item{name_x, name_y}{quoted variable names giving the predictor variable
(e.g., \code{"age"}) and outcome variable (.e.g, \code{"rate"}). These arguments
apply to \code{fit_gen_gamma_gamlss_se()}.}

\item{newdata}{a one-column dataframe for predictions}

\item{model}{a model fitted by \code{\link[=fit_gen_gamma_gamlss]{fit_gen_gamma_gamlss()}}}

\item{centiles}{centiles to use for prediction. Defaults to \code{c(5, 10, 50, 90, 95)}.}
}
\value{
for \code{fit_gen_gamma_gamlss()} and \code{fit_gen_gamma_gamlss_se()}, a
\code{\link[=mem_gamlss]{mem_gamlss()}}-fitted model. The \code{.user} data in the model includes degrees
of freedom for each parameter and the \code{\link[splines:ns]{splines::ns()}} basis for each
parameter. For \code{predict_gen_gamma_gamlss()}, a dataframe containing the
model predictions for mu, sigma, and nu, plus columns for each centile in
\code{centiles}.
}
\description{
The function fits the same type of model as used in \href{https://doi.org/10.1044/2021_JSLHR-21-00206}{Mahr 2021}: A generalized gamma
regression model (via \code{\link[gamlss.dist:GG]{gamlss.dist::GG()}}) with
natural cubic splines on the mean (mu), scale (sigma),
and shape (nu) of the distribution. This model is fitted using this
package's \code{\link[=mem_gamlss]{mem_gamlss()}} wrapper function.
}
\details{
There are versions two of this function. The main version is
\code{fit_gen_gamma_gamlss()}, and it works with unquoted column names (e.g.,
\code{age}). The alternative version is \code{fit_gen_gamma_gamlss_se()}; the final
"se" stands for "Standard Evaluation". This designation means that the
variable names must be given as strings (so, the quoted \code{"age"} instead of
bare name \code{age}). This alternative version is necessary when we fit several
models using parallel computing with \code{\link[furrr:future_map]{furrr::future_map()}} (as when using
bootstrap resampling).

\code{\link[=predict_centiles]{predict_centiles()}} will work with this function, but it will likely throw a
warning message. Therefore, \code{predict_gen_gamma_gamlss()} provides an
alternative way to compute centiles from the model. It manually computes the
centiles instead of relying on \code{\link[gamlss:centiles]{gamlss::centiles()}}.
}
\examples{
data_fake_rates

m <- fit_gen_gamma_gamlss(data_fake_rates, age_months, speaking_sps)
summary(m)

# Alternative interface
d <- data_fake_rates
m2 <- fit_gen_gamma_gamlss_se(
  data = d,
  name_x = "age_months",
  name_y = "speaking_sps"
)
coef(m2) == coef(m)

# how to use control to change gamlss() behavior
m_traced <- fit_gen_gamma_gamlss(
  data_fake_rates,
  age_months,
  speaking_sps,
  control = gamlss::gamlss.control(n.cyc = 15, trace = TRUE)
)

# The `.user` space includes the spline bases, so that we can make accurate
predictions of new xs.
names(m$.user)

# predict log(mean) at 55 months:
log_mean_55 <- cbind(1, predict(m$.user$basis_mu, 55)) \%*\% coef(m)
log_mean_55
exp(log_mean_55)

# But predict_gen_gamma_gamlss() does this work for us and also provides
# centiles
new_ages <- data.frame(age_months = 48:71)
centiles <- predict_gen_gamma_gamlss(new_ages, m)
centiles

# Confirm that the manual prediction matches the automatic one
centiles[centiles$age_months == 55, "mu"]
exp(log_mean_45)

if(requireNamespace("ggplot2", quietly = TRUE)) {
  library(ggplot2)
  ggplot(pivot_centiles_longer(centiles)) +
    aes(x = age_months, y = .value) +
    geom_line(aes(group = .centile, color = .centile_pair)) +
    geom_point(
      aes(y = speaking_sps),
      data = subset(
        data_fake_rates,
        48 <= age_months & age_months <= 71
      )
    )
}

}
\concept{models}
